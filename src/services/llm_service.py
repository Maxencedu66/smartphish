import ollama
from ollama import ListResponse, ProcessResponse
from pydantic import BaseModel

# Define the schema for the response
class EmailInfo(BaseModel):
  objet_mail: str
  contenu_mail: str

def generate_prompt(user_data):
    """G√©n√®re un prompt adapt√© au sc√©nario s√©lectionn√©."""
    scenario = user_data["sc√©nario"]

    prompts = {
        "D√©part √† la retraite": f"""
        R√©dige un email informel annon√ßant le d√©part √† la retraite d'un coll√®gue. 
        Le mail doit √™tre **court, direct et sans fioritures**. 
        Il doit inciter les destinataires √† **r√©pondre rapidement** en fournissant leurs coordonn√©es (RIB et num√©ro de t√©l√©phone).
        Ne pas laisser des informations √† compl√©ter.
        
        - **But** : Organiser un repas de d√©part et demander subtilement un RIB et des coordonn√©es.
        - **Ton** : Amical et d√©tendu.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        Salut √† tous, 
        On organise un d√Æner pour le d√©part √† la retraite d‚Äôun coll√®gue. J‚Äôaurai besoin de savoir qui est dispo et de r√©cup√©rer un acompte pour r√©server. 
        Merci d‚Äôenvoyer votre RIB ou de faire un virement directement. 
        √Ä bient√¥t !
        ---
        """,

        "Erreur de paiement - RIB n√©cessaire": f"""
        R√©dige un email **s√©rieux et court**, annon√ßant une erreur de versement de salaire. 
        Il doit **rassurer** le destinataire et l‚Äôinciter √† envoyer son **RIB** rapidement.

        - **But** : Obtenir un RIB sous pr√©texte d'une correction de paiement.
        - **Ton** : Professionnel et bienveillant.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        Bonjour, 
        Une erreur a √©t√© d√©tect√©e dans votre paiement ce mois-ci. Afin de proc√©der rapidement au virement, merci de renvoyer votre RIB √† cette adresse : {user_data['email_expediteur']}. 
        D√©sol√© pour ce d√©sagr√©ment, nous faisons le n√©cessaire au plus vite.
        ---
        """,

        "Alerte de s√©curit√© - Connexion suspecte": f"""
        R√©dige un **email d‚Äôalerte de s√©curit√©**, court et urgent, indiquant une **tentative de connexion suspecte**. 
        L‚Äôemail doit **pousser** le destinataire √† **cliquer imm√©diatement sur un faux lien** pour r√©initialiser son mot de passe.

        - **But** : Pi√©ger la cible en lui faisant croire √† un acc√®s non autoris√©.
        - **Ton** : Urgent, formel.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        ‚ö†Ô∏è Alerte de s√©curit√© ! 
        Une connexion inhabituelle a √©t√© d√©tect√©e sur plusieurs comptes {user_data['entreprise']}. 
        Si vous ne reconnaissez pas cette activit√©, **r√©initialisez imm√©diatement votre mot de passe** via ce lien s√©curis√© : [LIEN FAUX].  
        ---
        """,

        "Invitation √† un √©v√©nement exclusif": f"""
        R√©dige un email **dynamique et engageant**, invitant √† un √©v√©nement professionnel restreint. 
        L'email doit **√™tre convaincant** et inciter la cible √† **remplir un formulaire** avec ses coordonn√©es personnelles.

        - **But** : R√©cup√©rer des informations personnelles via un faux formulaire.
        - **Ton** : Enthousiaste et exclusif.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        üéâ {user_data['entreprise']} organise un √©v√©nement exclusif pour ses collaborateurs ! 
        Nombre de places limit√©, **inscrivez-vous vite** en remplissant ce formulaire : [LIEN FAUX]. 
        Ne manquez pas cette opportunit√© unique !
        ---
        """,

        "Mise √† jour de s√©curit√© urgente": f"""
        R√©dige un **email officiel** annon√ßant une **mise √† jour de s√©curit√© obligatoire**. 
        Il doit inciter le destinataire √† **se connecter sur un faux site** pour "mettre √† jour" ses acc√®s.

        - **But** : Faire croire √† une mise √† jour syst√®me pour obtenir des identifiants.
        - **Ton** : S√©rieux et impersonnel.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        Bonjour, 
        Dans le cadre de l‚Äôam√©lioration de la s√©curit√© informatique de {user_data['entreprise']}, une **mise √† jour de vos acc√®s** est n√©cessaire.  
        **Connectez-vous imm√©diatement** via ce lien s√©curis√© : [LIEN FAUX]. 
        ---
        """,

        "R√©initialisation de mot de passe": f"""
        R√©dige un **email urgent**, indiquant un **probl√®me avec le mot de passe** du destinataire. 
        Il doit √™tre **sobre, direct et efficace** pour inciter la personne √† **entrer ses identifiants sur un faux site**.

        - **But** : Amener la cible √† se connecter sur un faux site de r√©initialisation.
        - **Ton** : Sobre et direct.
        - **Signature** : {user_data['exp√©diteur']}.

        Exemple : 
        ---
        Bonjour,  
        Votre mot de passe expire aujourd‚Äôhui. Pour √©viter toute interruption de service, **r√©initialisez-le d√®s maintenant** via ce lien s√©curis√© : [LIEN FAUX].  
        ---
        """
    }

    return prompts.get(scenario, "Sc√©nario non trouv√©.")

def generate_phishing_email(user_data):
    """G√©n√®re un email de phishing √† l'aide de Mistral via Ollama."""
    prompt = generate_prompt(user_data)

    response: EmailInfo = ollama.chat(model="mistral", messages=[{"role": "user", "content": prompt}], format=EmailInfo.model_json_schema())
    response_obj = EmailInfo.model_validate_json(response.message.content)
    return {"object": response_obj.objet_mail, "content": response_obj.contenu_mail}

def get_ollama_status():
    """R√©cup√®re les informations sur les mod√®les t√©l√©charg√©s et/ou en m√©moire via Ollama."""
    
    # Mod√®les en m√©moire
    response_memory: ProcessResponse = ollama.ps()
    
    # Mod√®les t√©l√©charg√©s
    response: ListResponse = ollama.list()
    
    info_dicts = list()
    for model in response.models:
        info_dicts.append({
            'name': model.model,
            'size_mb': f'{(model.size.real / 1024 / 1024):.2f}',
            'family': model.details.family if model.details else None,
            'parameter_size': model.details.parameter_size if model.details else None,
            'modified_at': model.modified_at.strftime('%Y-%m-%d %H:%M:%S') if model.modified_at else None,
            'expires_at': None,
            'size_vram': None
        })
        
    for model in response_memory.models:
        for i in range(len(info_dicts)):
            if model.model == info_dicts[i]['name']:
                info_dicts[i]['expires_at'] = model.expires_at.strftime('%Y-%m-%d %H:%M:%S')
                info_dicts[i]['size_vram'] = model.size_vram
                break
    
    return info_dicts